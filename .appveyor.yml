version: 0.4.{build}

shallow_clone: true

environment:
   matrix:
      # - PYTHON_VERSION: "3.6"
      #   ARCH: 32
      #   MINICONDA: C:\Miniconda3
      - PYTHON_VERSION: "3.6"
        ARCH: 64
        MINICONDA: C:\Miniconda3-x64

init:
    - ECHO %PYTHON_VERSION% %MINICONDA% %ARCH%

install:
    - set PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PATH%
    - set PATH=C:\MinGW\bin\;%PATH%
    - conda config --set always_yes yes
    - conda config --set changeps1 no
    - conda config --set anaconda_upload no
    - conda update -q conda
    - conda install -q python=%PYTHON_VERSION% pip conda-build conda-verify numpy
    - mingw-get install gfortran
    - python setup.py build_ext
    - python setup.py install
    - conda build .\conda
    - conda install --use-local capytaine
    - move %MINICONDA%\conda-bld\win-%ARCH%\capytaine*.tar.bz2 .\ # Copy the build output to be catched as artifact

build: off

before_test:
    - conda install -q -c mancellin meshmagick>=1.2
    - conda install -q pytest

test_script:
    - pytest

artifacts:
    # Archive the generated conda package in the ci.appveyor.com build report.
    - path: '*.tar.gz'
